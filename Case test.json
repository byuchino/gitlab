{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_5",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                }
            ],
            "hash": "e800fa60aab1246777ad930d771d4f22cf05b019",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 1000,
                    "y": 419.9999999999998
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 1000,
                    "y": 880
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Compose report",
                            "customNameId": 0,
                            "drop_none": true,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "compose_report",
                        "id": "2",
                        "parameters": [
                            "container:url",
                            "container:name",
                            "container:description",
                            "playbook_input:promotion_reason"
                        ],
                        "template": "A file has been detected that has been\ndetermined to be potentially malicious. A\ncase has been opened.\n- **Case link**: {0}\n- **Event Name**: {1}\n- **Description**: {2}\n- **Reason for promotion**: {3}",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "format",
                    "x": 980,
                    "y": 560
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": [],
                            "refreshNotableData": true
                        },
                        "functionId": 1,
                        "functionName": "promote_to_case_1",
                        "id": "5",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "promote": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": [
                                            "NIST 800-61",
                                            "Response Template 1",
                                            "Account Compromise",
                                            "Data Breach",
                                            "Network Indicator Enrichment",
                                            "Risk Investigation",
                                            "Risk Response",
                                            "Self-Replicating Malware",
                                            "Suspicious Email",
                                            "Vulnerability Disclosure",
                                            "Scratch Workbook"
                                        ],
                                        "description": "",
                                        "label": "template",
                                        "name": "template",
                                        "placeholder": "Select a template",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "promote to case",
                                "name": "promote",
                                "refreshNotableData": true
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "promote": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "template": "Scratch Workbook"
                            }
                        }
                    },
                    "errors": {},
                    "id": "5",
                    "type": "utility",
                    "x": 980,
                    "y": 684.5
                }
            },
            "notes": ""
        },
        "input_spec": [
            {
                "contains": [],
                "description": "Provide a reason to promote the container to a case",
                "name": "Promotion Reason"
            }
        ],
        "output_spec": null,
        "playbook_type": "data",
        "python_version": "3",
        "schema": "5.0.5",
        "version": "5.2.1.78411"
    },
    "create_time": "2022-06-01T21:29:34.576829+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}