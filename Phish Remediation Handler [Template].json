{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "Phish use case remediation playbook.  This playbook is triggered on completion of all outstanding Attack Analyzer jobs that were launched from the phish main playbook.",
            "edges": [
                {
                    "id": "port_9_to_port_14",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_15",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_9",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_16_to_port_17",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_14",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_0_to_port_20",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_20_to_port_2",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_22",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_22_to_port_13",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_22_to_port_23",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_16",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "conditions": [
                        {
                            "index": 2
                        }
                    ],
                    "id": "port_22_to_port_10",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "conditions": [
                        {
                            "index": 3
                        }
                    ],
                    "id": "port_22_to_port_21",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                }
            ],
            "hash": "6ec3aebe867122362555c90c4bd003c48ff38057",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": 99.99999999999994
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1000,
                    "y": 1500
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "",
                            "customNameId": -1,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "code_4",
                        "id": "10",
                        "inputParameters": [
                            "filtered-data:filter_by_provider:condition_3:artifact:*.cef.ioc"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in filtered_artifact_0__cef_ioc:\n        phantom.debug(f'IP {item} is malicious and requires remediation')\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 1240,
                    "y": 840
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "Filter File By Provider",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_by_ioc_type:condition_1:artifact:*.cef.provider",
                                        "value": "splunk attack analyzer"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "attack analyzer vault file",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "filtered-data:filter_by_ioc_type:condition_1:artifact:*.cef.provider",
                                        "value": "virustotal"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "virustotal file hash",
                                "logic": "and"
                            }
                        ],
                        "functionId": 3,
                        "functionName": "filter_file_by_provider",
                        "id": "13",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "filter",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 400,
                    "y": 780
                },
                "14": {
                    "data": {
                        "advanced": {
                            "customName": "EWS Block Sender Placeholder",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "ews_block_sender_placeholder",
                        "id": "14",
                        "inputParameters": [
                            "filtered-data:filter_file_by_provider:condition_2:artifact:*.cef.ioc"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in filtered_artifact_0__cef_ioc:\n        phantom.debug(f'{item} submitted to EWS for O365 block sender action')\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 980,
                    "y": 1340
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "code_6",
                        "id": "15",
                        "inputParameters": [
                            "filtered-data:filter_file_by_provider:condition_2:artifact:*.cef.ioc"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in filtered_artifact_0__cef_ioc:\n        phantom.debug(f'file {item} is malicious and requires remediation')\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 340,
                    "y": 1020
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "code_1",
                        "id": "16",
                        "inputParameters": [
                            "filtered-data:filter_by_provider:condition_1:artifact:*.cef.ioc"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in filtered_artifact_0__cef_ioc:\n        phantom.debug(f'url {item} is malicious and requires remediation')\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 720,
                    "y": 1020
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "EWS Block URL Placeholder",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "ews_block_url_placeholder",
                        "id": "17",
                        "inputParameters": [
                            "filtered-data:filter_by_provider:condition_1:artifact:*.cef.ioc"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in filtered_artifact_0__cef_ioc:\n        phantom.debug(f'{item} submitted to EWS for O365 block url action')\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 720,
                    "y": 1140
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Filter for Malicious",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "malicious",
                                        "value": "artifact:*.tags"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "malicious ioc",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_for_malicious",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "warnings": {},
                    "x": 1040,
                    "y": 420
                },
                "20": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_Attack_Analyzer_Update_Malicious_1",
                        "id": "20",
                        "inputs": {},
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "Attack Analyzer Update Malicious",
                        "playbookRepo": 3,
                        "playbookRepoName": "phantom_pb_templates",
                        "playbookType": "automation",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "playbook",
                    "warnings": {},
                    "x": 980,
                    "y": 239.99999999999994
                },
                "21": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 7,
                        "functionName": "code_7",
                        "id": "21",
                        "inputParameters": [
                            "filtered-data:filter_by_provider:condition_4:artifact:*.cef.ioc"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in filtered_artifact_0__cef_ioc:\n        phantom.debug(f'Domain {item} is malicious and requires remediation')\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 1600,
                    "y": 780
                },
                "22": {
                    "data": {
                        "advanced": {
                            "customName": "Filter by IOC Type",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_for_malicious:condition_1:artifact:*.cef.ioctype",
                                        "value": "file"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "file ioc",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "filtered-data:filter_for_malicious:condition_1:artifact:*.cef.ioctype",
                                        "value": "url"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "url ioc",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "==",
                                        "param": "filtered-data:filter_for_malicious:condition_1:artifact:*.cef.ioctype",
                                        "value": "ip"
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "ip ioc",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 3,
                                        "op": "==",
                                        "param": "filtered-data:filter_for_malicious:condition_1:artifact:*.cef.ioctype",
                                        "value": "domain"
                                    }
                                ],
                                "conditionIndex": 3,
                                "customName": "domain ioc",
                                "logic": "and"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "filter_by_ioc_type",
                        "id": "22",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "filter",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 1040,
                    "y": 600
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "Filter URL By Provider",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "filtered-data:filter_by_ioc_type:condition_2:artifact:*.cef.provider",
                                        "value": "splunk attack analyzer"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "attack analyzer url",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "filtered-data:filter_by_ioc_type:condition_2:artifact:*.cef.provider",
                                        "value": "virustotal"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "virustotal url",
                                "logic": "and"
                            }
                        ],
                        "functionId": 4,
                        "functionName": "filter_url_by_provider",
                        "id": "23",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "filter",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 780,
                    "y": 840
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "SentinelOne Placeholder",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "sentinelone_placeholder",
                        "id": "9",
                        "inputParameters": [
                            "filtered-data:filter_file_by_provider:condition_2:artifact:*.cef.ioc"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    for item in filtered_artifact_0__cef_ioc:\n        phantom.debug(f'{item} submitted to SentinelOne block hash action')\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 340,
                    "y": 1140
                }
            },
            "notes": "Placeholders for assets not yet available",
            "origin": {
                "playbook_id": 570,
                "playbook_name": "Phish Remediation Handler",
                "playbook_repo_id": 3,
                "playbook_repo_name": "phantom_pb_templates"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.0.355"
    },
    "create_time": "2024-02-11T00:05:27.489779+00:00",
    "draft_mode": false,
    "labels": [
        "phish_remediate"
    ],
    "tags": []
}