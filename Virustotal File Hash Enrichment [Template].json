{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "Automation playbook to perform file hash reputation checks using VirusTotal V3.  Result summary is written back to the originating MC Incident as event data as well as in a note.",
            "edges": [
                {
                    "id": "port_19_to_port_20",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_10_to_port_21",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_20_to_port_1",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_21_to_port_1",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_22_to_port_1",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_0_to_port_23",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_24",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_24_to_port_25",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_25_to_port_3",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_27",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_27_to_port_19",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_29_to_port_22",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_27_to_port_30",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "30",
                    "targetPort": "30_in"
                },
                {
                    "id": "port_30_to_port_29",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_30_to_port_10",
                    "sourceNode": "30",
                    "sourcePort": "30_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                }
            ],
            "globalCustomCode": "from math import log\n\n\n",
            "hash": "fa5405a22b3c0c9cd8afed7fe0f44154757701fc",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": 19.99999999999983
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1000,
                    "y": 1380
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Format Reputation Note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_reputation_note",
                        "id": "10",
                        "parameters": [
                            "filtered-data:filter_results:condition_1:vt_reputation_check_file:action_result.parameter.hash",
                            "filtered-data:filter_results:condition_1:vt_reputation_check_file:action_result.summary",
                            "normalize_score_file:custom_function:score_index",
                            "normalize_score_file:custom_function:score"
                        ],
                        "template": "%%\nFile Hash:  {0}  \nReputation Summary:  {1}  \nNormalized Score Index:  {2}, {3}  \n\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "format",
                    "warnings": {},
                    "x": 980,
                    "y": 1040
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "Format Reputation Failed Note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "format_reputation_failed_note",
                        "id": "19",
                        "parameters": [
                            "filtered-data:filter_results:condition_2:vt_reputation_check_file:action_result.parameter.hash"
                        ],
                        "template": "%%\nVirus Total reputation check failed for file hash: {0}  \n\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "19",
                    "type": "format",
                    "warnings": {},
                    "x": 620,
                    "y": 900
                },
                "20": {
                    "data": {
                        "advanced": {
                            "customName": "Add File Reputation Failed Note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "add_file_reputation_failed_note",
                        "id": "20",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_reputation_failed_note:formatted_data",
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "File Reputation check failed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "20",
                    "type": "utility",
                    "warnings": {},
                    "x": 620,
                    "y": 1035.5
                },
                "21": {
                    "data": {
                        "advanced": {
                            "customName": "Add File Reputation Note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "add_file_reputation_note",
                        "id": "21",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_reputation_note:formatted_data",
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "File Reputation Check Results"
                            }
                        }
                    },
                    "errors": {},
                    "id": "21",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 1180
                },
                "22": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 5,
                        "functionName": "artifact_create_5",
                        "id": "22",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": null,
                                "cef_field": "",
                                "cef_value": "",
                                "container": "container:id",
                                "input_json": "format_artifact_json:formatted_data.*",
                                "label": null,
                                "name": "vt3_file_reputation_result",
                                "run_automation": null,
                                "severity": null,
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "22",
                    "type": "utility",
                    "warnings": {},
                    "x": 1340,
                    "y": 1180
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "Filter iocs",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.fileHash",
                                        "value": ""
                                    },
                                    {
                                        "op": "!=",
                                        "param": "artifact:*.cef.fileHashMd5",
                                        "value": ""
                                    },
                                    {
                                        "op": "!=",
                                        "param": "artifact:*.cef.fileHashSha1",
                                        "value": ""
                                    },
                                    {
                                        "op": "!=",
                                        "param": "artifact:*.cef.fileHashSha256",
                                        "value": ""
                                    },
                                    {
                                        "op": "!=",
                                        "param": "artifact:*.cef.fileHashSha512",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "or"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_iocs",
                        "id": "23",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "filter",
                    "warnings": {},
                    "x": 1040,
                    "y": 140
                },
                "24": {
                    "data": {
                        "advanced": {
                            "customName": "Merge ioc lists",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_merge",
                            "repoName": "community"
                        },
                        "functionId": 6,
                        "functionName": "merge_ioc_lists",
                        "id": "24",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_merge": {
                                "description": "Merge 2-10 different data paths into a single output data path. For example, if IP addresses are stored in the fields sourceAddress, destinationAddress, and deviceAddress, then those three fields could be merged together to form a single list of IP addresses.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_merge",
                                "name": "list_merge"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_merge": {
                                "input_1": [
                                    "filtered-data:filter_iocs:condition_1:artifact:*.cef.fileHash"
                                ],
                                "input_10": null,
                                "input_2": [
                                    "filtered-data:filter_iocs:condition_1:artifact:*.cef.fileHashMd5"
                                ],
                                "input_3": [
                                    "filtered-data:filter_iocs:condition_1:artifact:*.cef.fileHashSha1"
                                ],
                                "input_4": [
                                    "filtered-data:filter_iocs:condition_1:artifact:*.cef.fileHashSha256"
                                ],
                                "input_5": [
                                    "filtered-data:filter_iocs:condition_1:artifact:*.cef.fileHashSha512"
                                ],
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "24",
                    "type": "utility",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 980,
                    "y": 320
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "Remove duplicates",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_deduplicate",
                            "repoName": "community"
                        },
                        "functionId": 7,
                        "functionName": "remove_duplicates",
                        "id": "25",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_deduplicate": {
                                "description": "Remove non-unique items from a list.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of items to deduplicate",
                                        "inputType": "list",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_deduplicate",
                                "name": "list_deduplicate"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_deduplicate": {
                                "input_list": [
                                    "merge_ioc_lists:custom_function_result.data.item"
                                ]
                            }
                        }
                    },
                    "errors": {},
                    "id": "25",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 440
                },
                "27": {
                    "data": {
                        "advanced": {
                            "customName": "Filter Results",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "vt_reputation_check_file:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "vt_reputation_check_file:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 1,
                                "logic": "and"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "filter_results",
                        "id": "27",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "filter",
                    "warnings": {},
                    "x": 1040,
                    "y": 680
                },
                "29": {
                    "data": {
                        "advanced": {
                            "customName": "Format Artifact JSON",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "format_artifact_json",
                        "id": "29",
                        "parameters": [
                            "filtered-data:filter_results:condition_1:vt_reputation_check_file:action_result.parameter.hash",
                            "filtered-data:filter_results:condition_1:vt_reputation_check_file:action_result.summary",
                            "normalize_score_file:custom_function:score",
                            "normalize_score_file:custom_function:score_index"
                        ],
                        "template": "%%\n{{\"cef_data\":{{\"fileHash\":\"{0}\",\"ioctype\":\"file\",\"provider\":\"virustotal\",\"summary\":\"{1}\",\"score\":\"{2}\",\"scoreindex\":{3}}}}}\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "format",
                    "warnings": {},
                    "x": 1340,
                    "y": 1040
                },
                "3": {
                    "data": {
                        "action": "file reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "VT_Reputation_Check_File",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "VirusTotal v3",
                        "connectorConfigs": [
                            "virustotalv3"
                        ],
                        "connectorId": "3fe4875d-a4a7-47d3-9ef1-f9e63a6653a4",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "vt_reputation_check_file",
                        "id": "3",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "hash": "remove_duplicates:custom_function_result.data.*.item"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "hash"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "action",
                    "warnings": {},
                    "x": 980,
                    "y": 560
                },
                "30": {
                    "data": {
                        "advanced": {
                            "customName": "Normalize Score File",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "normalize_score_file",
                        "id": "30",
                        "inputParameters": [
                            "filtered-data:filter_results:condition_1:vt_reputation_check_file:action_result.summary"
                        ],
                        "outputVariables": [
                            "file_score_object",
                            "score",
                            "score_index"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "30",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    score_table = {\n        \"0\":\"Unknown\",\n        \"1\":\"Very_Safe\",\n        \"2\":\"Safe\",\n        \"3\":\"Probably_Safe\",\n        \"4\":\"Leans_Safe\",\n        \"5\":\"May_not_be_Safe\",\n        \"6\":\"Exercise_Caution\",\n        \"7\":\"Suspicious_or_Risky\",\n        \"8\":\"Possibly_Malicious\",\n        \"9\":\"Probably_Malicious\",\n        \"10\":\"Malicious\"\n    }\n    \n    file_summary_list = filtered_result_0_summary\n    normalize_score_file__file_score_object = []\n    normalize_score_file__score = []\n    normalize_score_file__score_index = []\n    \n    for summary_data in file_summary_list:\n        # Set confidence based on percentage of vendors undetected\n        # Reduce the confidence by percentage of vendors undetected.\n        vendors = summary_data['harmless'] + summary_data['undetected'] + summary_data['malicious'] + summary_data['suspicious']\n        if not vendors:\n            vendors = 1\n        confidence = 100 - int((summary_data['undetected']/vendors) * 100)\n        \n        # Normalize reputation on a 10 point scale based on number of malicious and suspicious divided by harmless vendors\n        # This can be adjusted to include whatever logic is desired.\n        suspect = summary_data['malicious'] + summary_data['suspicious']\n        # If there are only harmless verdicts and no suspicious entries, set score_id to 1.\n        if not suspect:\n            score_id = 1\n        else:\n            # customize score calculation as desired\n            log_result = log((suspect/vendors) * 100, 100) # log imported from math in global code block\n            score_id = int(log_result * 10) + 3\n            if score_id > 10:\n                score_id = 10\n            \n        score = score_table[str(score_id)]\n\n        normalize_score_file__file_score_object.append({'score': score, 'score_id': score_id, 'confidence': confidence})\n        normalize_score_file__score.append(score)\n        normalize_score_file__score_index.append(score_id)\n\n",
                    "warnings": {},
                    "x": 1340,
                    "y": 900
                }
            },
            "notes": "Called by parent playbook, \"CTDR Virustotal All IOC Enrichments\"",
            "origin": {
                "playbook_id": 268,
                "playbook_name": "CTDR Virustotal File Hash Enrichment",
                "playbook_repo_id": 3,
                "playbook_repo_name": "phantom_pb_templates"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.0.355"
    },
    "create_time": "2024-02-10T02:44:04.733350+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}