{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_6_to_port_7",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "id": "port_10_to_port_8",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_1",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_7_to_port_1",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_12_to_port_10",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_5_to_port_13",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_14_to_port_1",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_12_to_port_15",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_1",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_0_to_port_17",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_6",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_18",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_13_to_port_12",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_20_to_port_1",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_6_to_port_22",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_22_to_port_5",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_18_to_port_20",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                }
            ],
            "hash": "048f1357509bbd77077755a6c13b3dac8eada4ca",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 870,
                    "y": -6.394884621840902e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 700,
                    "y": 1492
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "FB_Incident_Note_User_Details",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "functionId": 1,
                        "functionName": "fb_incident_note_user_details",
                        "id": "10",
                        "parameters": [
                            "ad_get_user_properties:action_result.data.*.mail",
                            "ad_get_user_properties:action_result.data.*.displayName",
                            "ad_get_user_properties:action_result.data.*.department",
                            "ad_get_user_properties:action_result.data.*.employeeId",
                            "ad_get_user_properties:action_result.data.*.userType",
                            "ad_get_user_properties:action_result.data.*.accountEnabled",
                            "ad_get_user_properties:action_result.data.*.jobTitle",
                            "ad_get_user_properties:action_result.data.*.usageLocation",
                            "ad_get_user_properties:action_result.data.*.accountEnabled",
                            "ad_get_user_properties:action_result.data.*.createdDateTime",
                            "ad_get_user_properties:action_result.data.*.lastDirSyncTime",
                            "ad_get_user_properties:action_result.data.*.dirSyncEnabled",
                            "ad_get_manager_attributes:action_result.data.*.displayName",
                            "ad_get_manager_attributes:action_result.data.*.mail",
                            "ad_get_user_properties:action_result.data.*.physicalDeliveryOfficeName",
                            "",
                            ""
                        ],
                        "template": "| Field                   | Value  |\n|-------------------------|--------|\n| Email:                  | {0}    |\n| Display Name:           | {1}    |\n| Department:             | {2}    |\n| Employee ID:            | {3}    |\n| User Type:              | {4}    |\n| Account Enabled:        | {5}    |\n| Job Title:              | {6}    |\n| Usage Location:         | {7}    |\n| Created DateTime:       | {8}    |\n| Last Direct Sync Time:  | {9}    |\n| Direct Sync Enabled:    | {10}   |\n| User Principal Name:    | {11}   |\n| Manager Name:           | {12}   |\n| Manager Email:          | {13}   |\n| User Office:            | {14}   |",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "format",
                    "warnings": {},
                    "x": 340,
                    "y": 1164
                },
                "12": {
                    "data": {
                        "action": "list user attributes",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "AD_Get_Manager_Attributes",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Azure AD Graph",
                        "connectorConfigs": [
                            "production ad graph"
                        ],
                        "connectorId": "c6d3b801-5c26-4abd-9e89-6d8007e2778f",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "ad_get_manager_attributes",
                        "id": "12",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "user_id": {
                                "functionId": 2,
                                "parameters": [
                                    "ad_get_user_properties:action_result.parameter.user_id"
                                ],
                                "template": "{0}/manager"
                            }
                        },
                        "requiredParameters": [],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "action",
                    "warnings": {},
                    "x": 510,
                    "y": 1000
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "DB_Is_Get_User_Attributes_Success",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "ad_get_user_properties:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "success",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "failure",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "db_is_get_user_attributes_success",
                        "id": "13",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "decision",
                    "warnings": {},
                    "x": 590,
                    "y": 820
                },
                "14": {
                    "data": {
                        "action": "add incident note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "MC_Add_Incident_Note_Get_User_Details_Failed",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "mc_add_incident_note_get_user_details_failed",
                        "id": "14",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 2,
                                "parameters": [
                                    "ad_get_user_properties:action_result.parameter.user_id",
                                    "ad_get_user_properties:action_result.message"
                                ],
                                "template": "Failed to get the attributes of user: {0} from azure active directory\n\nMessage: {1}"
                            },
                            "id": "container:external_id",
                            "title": "Failed to Get User details from AD"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 1020,
                    "y": 1328
                },
                "15": {
                    "data": {
                        "action": "create events",
                        "actionType": "post",
                        "advanced": {
                            "customName": "Create_MC_Events_User_Manager_Information",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "create_mc_events_user_manager_information",
                        "id": "15",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "incident_id": "container:external_id",
                            "pairs": [
                                {
                                    "name": "user",
                                    "value": "ad_get_user_properties:action_result.data"
                                },
                                {
                                    "name": "manager",
                                    "value": "ad_get_user_properties:action_result.parameter.user_id"
                                }
                            ]
                        },
                        "requiredParameters": [
                            {
                                "data_type": "array",
                                "field": "pairs"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "incident_id"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 680,
                    "y": 1328
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_Get_User_Email_1",
                        "id": "17",
                        "inputs": {},
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "Get User Email",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "playbook",
                    "warnings": {},
                    "x": 850,
                    "y": 148
                },
                "18": {
                    "data": {
                        "action": "list user attributes",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "AD_Get_User_Member_Groups",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Azure AD Graph",
                        "connectorConfigs": [
                            "production ad graph"
                        ],
                        "connectorId": "c6d3b801-5c26-4abd-9e89-6d8007e2778f",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "ad_get_user_member_groups",
                        "id": "18",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "user_id": {
                                "functionId": 3,
                                "parameters": [
                                    "ad_get_user_properties:action_result.parameter.user_id"
                                ],
                                "template": "{0}/memberOf"
                            }
                        },
                        "requiredParameters": [],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "action",
                    "warnings": {},
                    "x": -1.4210854715202004e-14,
                    "y": 1164
                },
                "20": {
                    "data": {
                        "action": "add incident note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "MC_Add_Incident_Note_User_Groups",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "mc_add_incident_note_user_groups",
                        "id": "20",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 3,
                                "parameters": [
                                    "ad_get_user_member_groups:action_result.data.*.displayName"
                                ],
                                "template": "{0}"
                            },
                            "id": "container:external_id",
                            "title": {
                                "functionId": 3,
                                "parameters": [
                                    "ad_get_user_properties:action_result.parameter.user_id"
                                ],
                                "template": "User Groups for {0}"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "missionControl",
                    "warnings": {},
                    "x": -1.4210854715202004e-14,
                    "y": 1328
                },
                "22": {
                    "data": {
                        "advanced": {
                            "customName": "FL_User_Email_Event",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.user_email",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "user email not null",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "fl_user_email_event",
                        "id": "22",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "filter",
                    "warnings": {},
                    "x": 570,
                    "y": 476
                },
                "5": {
                    "data": {
                        "action": "list user attributes",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "AD_Get_User_Properties",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Azure AD Graph",
                        "connectorConfigs": [
                            "production ad graph"
                        ],
                        "connectorId": "c6d3b801-5c26-4abd-9e89-6d8007e2778f",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "ad_get_user_properties",
                        "id": "5",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "user_id": "filtered-data:fl_user_email_event:condition_1:artifact:*.cef.user_email"
                        },
                        "requiredParameters": [],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "action",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 510,
                    "y": 656
                },
                "6": {
                    "data": {
                        "advanced": {
                            "customName": "DB_Check_User_Email_Exist",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.user_email",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "user email exists",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "user email does not exist",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "db_check_user_email_exist",
                        "id": "6",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "decision",
                    "warnings": {},
                    "x": 930,
                    "y": 296
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "User_Email_Not_Exist",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "functionId": 3,
                        "functionName": "user_email_not_exist",
                        "id": "7",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": null,
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "User Email Doesn't Exist in the Incident"
                            }
                        }
                    },
                    "errors": {},
                    "id": "7",
                    "type": "utility",
                    "warnings": {},
                    "x": 1380,
                    "y": 960
                },
                "8": {
                    "data": {
                        "action": "add incident note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "MC_Add_Incident_Note_User_Details",
                            "customNameId": 0,
                            "join": [],
                            "scope": "all"
                        },
                        "connector": "Mission Control",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 182,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "mc_add_incident_note_user_details",
                        "id": "8",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 1,
                                "parameters": [
                                    "fb_incident_note_user_details:formatted_data"
                                ],
                                "template": "{0}\n"
                            },
                            "id": "container:external_id",
                            "title": {
                                "functionId": 1,
                                "parameters": [
                                    "ad_get_user_properties:action_result.parameter.user_id"
                                ],
                                "template": "User Details for {0}\n"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            }
                        ],
                        "type": "missionControl"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "missionControl",
                    "warnings": {},
                    "x": 340,
                    "y": 1328
                }
            },
            "notes": "",
            "origin": {
                "playbook_id": 182,
                "playbook_name": "CTDR AD Graph User Enrichment Master",
                "playbook_repo_id": 2,
                "playbook_repo_name": "local"
            }
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.0.355"
    },
    "create_time": "2024-01-20T06:31:05.694393+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}