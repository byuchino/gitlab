{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_8_to_port_4",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_9_to_port_10",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_10_to_port_11",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_13_to_port_15",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_16",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_16_to_port_18",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_17",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_11_to_port_20",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_21_to_port_22",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_20_to_port_23",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "id": "port_20_to_port_21",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_0_to_port_24",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_24_to_port_25",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "25",
                    "targetPort": "25_in"
                },
                {
                    "id": "port_24_to_port_26",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_26_to_port_27",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                }
            ],
            "hash": "7c72dd8ce259264dddc4d1f2085e03882b920832",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 1000,
                    "y": 419.9999999999987
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 1000,
                    "y": 1220
                },
                "10": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "code_5",
                        "id": "10",
                        "inputParameters": [
                            "code_4:custom_function:outlist"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'outlist:  {json.dumps(code_4__outlist, indent=4)}')\n\n",
                    "x": 680,
                    "y": 660
                },
                "11": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "passthrough",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "passthrough_3",
                        "id": "11",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "passthrough": {
                                "description": "Return the inputs as outputs. This is useful for publishing pieces of data for other blocks in the playbook to use.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "passthrough",
                                "name": "passthrough"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "passthrough": {
                                "input_1": "code_4:custom_function:outlist",
                                "input_10": null,
                                "input_2": null,
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "11",
                    "type": "utility",
                    "x": 680,
                    "y": 764.5
                },
                "12": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "code_6",
                        "id": "12",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(\"check json\")\n    #i = ['44444444', '88888888']\n    #i = \"[44444444, 88888888]\"\n    i = \"44444444, 88888888\"\n\n    try:\n        l = json.loads(i)\n        phantom.debug(\"valid json string\")\n    except:\n        phantom.debug(\"exception\")\n        l = i\n        \n    phantom.debug(f\"input type is {type(l)}\")\n    phantom.debug(f\"input is {json.dumps(l, indent=4)}\")\n    \n    if isinstance(l, list):\n        s = \",\".join(str(x) for x in l)\n        phantom.debug(f\"after conversion: {s}\")\n        phantom.debug(f\"type is {type(s)}\")\n    else:\n        phantom.debug(\"input is not convertible\")\n    \n    \n    '''    \n    if isinstance(l, list):\n        phantom.debug(f\"type is {type(l)}\")\n        s = \",\".join(l)\n        phantom.debug(f\"after conversion: {s}\")\n        phantom.debug(f\"type is {type(s)}\")\n    else:\n        try:\n            json.loads(l)\n            phantom.debug(\"valid json\")\n        except:\n            phantom.debug(\"invalid json\")\n    '''\n\n",
                    "x": 1300,
                    "y": 680
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 7,
                        "functionName": "code_7",
                        "id": "13",
                        "inputParameters": [],
                        "outputVariables": [
                            "outlist"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    art1 = {\"cn\": \"User One\", \"email\": \"userone@nowhere.com\" }\n    art2 = {\"cn\": \"User Two\", \"email\": \"usertwo@nowhere.com\" }\n    art3 = {\"cn\": \"User Three\", \"email\": \"userthree@nowhere.com\" }\n    \n    l1 = [art1, art2, art3]\n    l2 = [l1]\n    \n    #code_4__outlist = {\"threatIds\": [art1, art2, art3]}\n    code_7__outlist = [l2]\n\n\n",
                    "x": 980,
                    "y": 560
                },
                "14": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 8,
                        "functionName": "code_8",
                        "id": "14",
                        "inputParameters": [
                            "code_7:custom_function:outlist"
                        ],
                        "outputVariables": [
                            "output"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'sim response:  {json.dumps(code_7__outlist, indent=4)}')\n    \n    \n    l2 = code_7__outlist[0]\n    l3 = l2[0]\n    \n    for item in l3:\n        phantom.debug(f'item:  {json.dumps(item, indent=4)}')\n\n",
                    "x": 1300,
                    "y": 780
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "passthrough",
                            "repoName": "community"
                        },
                        "functionId": 4,
                        "functionName": "passthrough_4",
                        "id": "15",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "passthrough": {
                                "description": "Return the inputs as outputs. This is useful for publishing pieces of data for other blocks in the playbook to use.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "passthrough",
                                "name": "passthrough"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "passthrough": {
                                "input_1": "code_7:custom_function:outlist",
                                "input_10": null,
                                "input_2": null,
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "15",
                    "type": "utility",
                    "x": 980,
                    "y": 660
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "coalesce_search_results",
                            "repoName": "phantom_pb_templates"
                        },
                        "functionId": 5,
                        "functionName": "coalesce_search_results_5",
                        "id": "16",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "coalesce_search_results": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "result_data",
                                        "name": "result_data",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "coalesce_search_results",
                                "name": "coalesce_search_results"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "coalesce_search_results": {
                                "result_data": "passthrough_4:custom_function_result.data.*.item"
                            }
                        }
                    },
                    "errors": {},
                    "id": "16",
                    "type": "utility",
                    "x": 980,
                    "y": 760
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 9,
                        "functionName": "code_9",
                        "id": "17",
                        "inputParameters": [
                            "format_2:formatted_data"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    #phantom.debug(f'after coalesce:  {json.dumps(coalesce_search_results_5_data_items, indent=4)}')\n    phantom.debug(f'format:  {format_2}')\n\n",
                    "x": 980,
                    "y": 980
                },
                "18": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "format_2",
                        "id": "18",
                        "parameters": [
                            "coalesce_search_results_5:custom_function_result.data.items.*.item.email"
                        ],
                        "template": "%%\nEmail {0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "x": 980,
                    "y": 880
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "artifact_create",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "artifact_create_1",
                        "id": "2",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "artifact_create": {
                                "description": "Create a new artifact with the specified attributes. Supports all fields available in /rest/artifact. Add any unlisted inputs as dictionary keys in input_json. Unsupported keys will automatically be dropped.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "phantom container id"
                                        ],
                                        "description": "Container which the artifact will be added to.",
                                        "inputType": "item",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "container:id",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the new artifact, which is optional and defaults to \"artifact\".",
                                        "inputType": "item",
                                        "label": "name",
                                        "name": "name",
                                        "placeholder": "artifact",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The label of the new artifact, which is optional and defaults to \"events\"",
                                        "inputType": "item",
                                        "label": "label",
                                        "name": "label",
                                        "placeholder": "events",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            ""
                                        ],
                                        "description": "The severity of the new artifact, which is optional and defaults to \"Medium\". Typically this is either \"High\", \"Medium\", or \"Low\".",
                                        "inputType": "item",
                                        "label": "severity",
                                        "name": "severity",
                                        "placeholder": "Medium",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The name of the CEF field to populate in the artifact, such as \"destinationAddress\" or \"sourceDnsDomain\". Required only if cef_value is provided.",
                                        "inputType": "item",
                                        "label": "cef_field",
                                        "name": "cef_field",
                                        "placeholder": "destinationAddress",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The value of the CEF field to populate in the artifact, such as the IP address, domain name, or file hash. Required only if cef_field is provided.",
                                        "inputType": "item",
                                        "label": "cef_value",
                                        "name": "cef_value",
                                        "placeholder": "192.0.2.192",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The CEF data type of the data in cef_value. For example, this could be \"ip\", \"hash\", or \"domain\". Optional.",
                                        "inputType": "item",
                                        "label": "cef_data_type",
                                        "name": "cef_data_type",
                                        "placeholder": "ip",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "A comma-separated list of tags to apply to the created artifact, which is optional.",
                                        "inputType": "item",
                                        "label": "tags",
                                        "name": "tags",
                                        "placeholder": "tag1, tag2, tag3",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either \"true\" or \"false\", depending on whether or not the new artifact should trigger the execution of any playbooks that are set to active on the label of the container the artifact will be added to. Optional and defaults to \"false\".",
                                        "inputType": "item",
                                        "label": "run_automation",
                                        "name": "run_automation",
                                        "placeholder": "false",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Optional parameter to modify any extra attributes of the artifact. Input_json will be merged with other inputs. In the event of a conflict, input_json will take precedence.",
                                        "inputType": "item",
                                        "label": "input_json",
                                        "name": "input_json",
                                        "placeholder": "{\"source_data_identifier\": \"1234\", \"data\": \"5678\"}",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "artifact_create",
                                "name": "artifact_create"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "artifact_create": {
                                "cef_data_type": null,
                                "cef_field": "threatIds",
                                "cef_value": "[\"88888888\", \"99999999\"]",
                                "container": "container:id",
                                "input_json": null,
                                "label": null,
                                "name": "threats",
                                "run_automation": null,
                                "severity": null,
                                "tags": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "2",
                    "type": "utility",
                    "x": 1300,
                    "y": 880
                },
                "20": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "mv2list",
                            "repoName": "phantom_pb_templates"
                        },
                        "functionId": 6,
                        "functionName": "mv2list_6",
                        "id": "20",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "mv2list": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "mvfield",
                                        "name": "mvfield",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "mv2list",
                                "name": "mv2list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "mv2list": {
                                "mvfield": "passthrough_3:custom_function_result.data.*.item"
                            }
                        }
                    },
                    "errors": {},
                    "id": "20",
                    "type": "utility",
                    "x": 380,
                    "y": 880
                },
                "21": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "format_3",
                        "id": "21",
                        "parameters": [
                            "mv2list_6:custom_function_result.data.outlist"
                        ],
                        "template": "%%\n{0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "format",
                    "x": 380,
                    "y": 1140
                },
                "22": {
                    "data": {
                        "action": "ip reputation",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "VirusTotal",
                        "connectorConfigs": [
                            "vtotalv2"
                        ],
                        "connectorId": "11f676a4-f3d4-4db0-8587-f4e942c07c7c",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "ip_reputation_1",
                        "id": "22",
                        "parameters": {
                            "ip": "format_3:formatted_data.*"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "ip"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "action",
                    "x": 380,
                    "y": 1260
                },
                "23": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "debug",
                            "repoName": "community"
                        },
                        "functionId": 7,
                        "functionName": "debug_7",
                        "id": "23",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "debug": {
                                "description": "Print debug messages with the type and value of 0-10 different inputs. This is useful for checking the values of input data or the outputs of other playbook blocks.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "debug",
                                "name": "debug"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "debug": {
                                "input_1": "mv2list_6:custom_function_result.data.outlist",
                                "input_10": null,
                                "input_2": null,
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "23",
                    "type": "utility",
                    "x": 60,
                    "y": 1040
                },
                "24": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "get_all_notes",
                            "repoName": "phantom_pb_templates"
                        },
                        "functionId": 8,
                        "functionName": "get_all_notes_8",
                        "id": "24",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "get_all_notes": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "container",
                                        "name": "container",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "get_all_notes",
                                "name": "get_all_notes"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "get_all_notes": {
                                "container": "container:id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "24",
                    "type": "utility",
                    "x": 1600,
                    "y": 560
                },
                "25": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 10,
                        "functionName": "code_10",
                        "id": "25",
                        "inputParameters": [
                            "get_all_notes_8:custom_function_result.data.items"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "25",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'Notes:  {json.dumps(get_all_notes_8_data_items, indent=4)}')\n\n",
                    "x": 1840,
                    "y": 700
                },
                "26": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "format_4",
                        "id": "26",
                        "parameters": [
                            "get_all_notes_8:custom_function_result.data.items.*.item.title",
                            "get_all_notes_8:custom_function_result.data.items.*.item.content"
                        ],
                        "template": "%%\n{0}\n{1}\n=====================================\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "format",
                    "x": 1600,
                    "y": 780
                },
                "27": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 11,
                        "functionName": "code_11",
                        "id": "27",
                        "inputParameters": [
                            "format_4:formatted_data"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(format_4)\n\n",
                    "x": 1600,
                    "y": 920
                },
                "3": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "code_1",
                        "id": "3",
                        "inputParameters": [
                            "artifact:*.cef.threatIds"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    user_id = phantom.get_effective_user()\n    phantom.debug(f'user_id:  {user_id}')\n    phantom.debug(f'threatIds:  {json.dumps(container_artifact_cef_item_0, indent=4)}')\n\n",
                    "x": 1300,
                    "y": 560
                },
                "4": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "code_2",
                        "id": "4",
                        "inputParameters": [
                            "format_1:formatted_data"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(format_1)\n\n",
                    "x": 380,
                    "y": 700
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "ltos",
                            "repoName": "phantom_pb_templates"
                        },
                        "functionId": 2,
                        "functionName": "ltos_2",
                        "id": "5",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "ltos": {
                                "description": "list to string",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "ltos",
                                "name": "ltos"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "ltos": {
                                "input_list": "passthrough_3:custom_function_result.data.*.item"
                            }
                        }
                    },
                    "errors": {},
                    "id": "5",
                    "type": "utility",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(\"LTOS CALLED\")\n\n",
                    "x": 680,
                    "y": 880
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "code_3",
                        "id": "6",
                        "inputParameters": [
                            "ltos_2:custom_function_result.data.output_string"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'output_string:  {ltos_2_data_output_string}')\n\n",
                    "x": 680,
                    "y": 980
                },
                "7": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk50"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_1",
                        "id": "7",
                        "parameters": {
                            "command": "",
                            "end_time": "now",
                            "query": "|inputlookup abc",
                            "start_time": "-1m"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "action",
                    "x": 140,
                    "y": 560
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_1",
                        "id": "8",
                        "parameters": [
                            "artifact:*.cef.threatIds"
                        ],
                        "template": "%%\nthreatID = \"{0}\"\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "format",
                    "x": 380,
                    "y": 420
                },
                "9": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "code_4",
                        "id": "9",
                        "inputParameters": [
                            "artifact:*.cef.threatIds"
                        ],
                        "outputVariables": [
                            "outlist"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    art1 = [\"1.2.3.4\",\"8.8.8.8\"]\n    art2 = [\"192.168.254.57\",\"192.168.1.17\"]\n    art3 = [\"10.36.101.20\",\"10.42.73.151\"]\n    \n    #code_4__outlist = {\"threatIds\": [art1, art2, art3]}\n    code_4__outlist = [art1, art2, art3]\n\n",
                    "x": 680,
                    "y": 560
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.6",
        "version": "5.3.1.84890"
    },
    "create_time": "2023-03-02T15:18:30.261604+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}