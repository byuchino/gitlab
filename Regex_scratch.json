{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_6_to_port_10",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_9_to_port_12",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_12_to_port_5",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_15_to_port_16",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_10_to_port_9",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_16_to_port_18",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_17",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_18_to_port_13",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_0_to_port_19",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_19_to_port_20",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "id": "port_20_to_port_21",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_21_to_port_22",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_21_to_port_23",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                }
            ],
            "hash": "b46e5dfe483052eab9f02e73dba844029db7e954",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": 419.9999999999992
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1000,
                    "y": 1060
                },
                "10": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "code_5",
                        "id": "10",
                        "inputParameters": [
                            "list_merge_3:custom_function_result.data.item"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'after merge:  {json.dumps(list_merge_3_data_item, indent=4)}')\n\n",
                    "warnings": {},
                    "x": 980,
                    "y": 640
                },
                "11": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "code_1",
                        "id": "11",
                        "inputParameters": [
                            "list_fixup_domain_names_4:custom_function_result.data.item",
                            "fmglobal.com"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    input_list = list_fixup_domain_names_4_data_item\n    exclude = input_parameter_0\n    \n    outputs = []\n    \n    for item in input_list:\n        if item and exclude.lower() not in item.lower():\n            outputs.append({\"item\": item})\n            \n    phantom.debug(f'outputs:  {json.dumps(outputs, indent=4)}')\n\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 600,
                    "y": 1200
                },
                "12": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_filter_list",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "regex_filter_list_1",
                        "id": "12",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_filter_list": {
                                "description": "Filter values in a list using a regex and either keep or drop values that match, depending on the action parameter.",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "Either 'keep' or 'drop' to specify what to do with the items that match the regular expression. The default is 'keep'.",
                                        "inputType": "item",
                                        "label": "action",
                                        "name": "action",
                                        "placeholder": "'keep' or 'drop'",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The list of items to filter using a regex",
                                        "inputType": "list",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "list to filter",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The regular expression to use to filter the list",
                                        "inputType": "item",
                                        "label": "regex",
                                        "name": "regex",
                                        "placeholder": "\\w+\\.exe",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_filter_list",
                                "name": "regex_filter_list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_filter_list": {
                                "action": "drop",
                                "input_list": [
                                    "list_fixup_domain_names_4:custom_function_result.data.item"
                                ],
                                "regex": "(?i)fmglobal\\.com"
                            }
                        }
                    },
                    "errors": {},
                    "id": "12",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 840
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_filter_list",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "regex_filter_list_2",
                        "id": "13",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_filter_list": {
                                "description": "Filter values in a list using a regex and either keep or drop values that match, depending on the action parameter.",
                                "fields": [
                                    {
                                        "dataTypes": [],
                                        "description": "Either 'keep' or 'drop' to specify what to do with the items that match the regular expression. The default is 'keep'.",
                                        "inputType": "item",
                                        "label": "action",
                                        "name": "action",
                                        "placeholder": "'keep' or 'drop'",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The list of items to filter using a regex",
                                        "inputType": "list",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "list to filter",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The regular expression to use to filter the list",
                                        "inputType": "item",
                                        "label": "regex",
                                        "name": "regex",
                                        "placeholder": "\\w+\\.exe",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_filter_list",
                                "name": "regex_filter_list"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_filter_list": {
                                "action": "drop",
                                "input_list": [
                                    "list_merge_5:custom_function_result.data.item"
                                ],
                                "regex": "format_1:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "13",
                    "type": "utility",
                    "warnings": {},
                    "x": 1300,
                    "y": 840
                },
                "14": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "code_6",
                        "id": "14",
                        "inputParameters": [
                            "regex_filter_list_2:custom_function_result.data.item"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'url list after filter:  {json.dumps(regex_filter_list_2_data_item, indent=4)}')\n    \n    assert json.dumps([])\n\n",
                    "warnings": {},
                    "x": 1300,
                    "y": 960
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_merge",
                            "repoName": "community"
                        },
                        "functionId": 5,
                        "functionName": "list_merge_5",
                        "id": "15",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_merge": {
                                "description": "Merge 2-10 different data paths into a single output data path. For example, if IP addresses are stored in the fields sourceAddress, destinationAddress, and deviceAddress, then those three fields could be merged together to form a single list of IP addresses.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_merge",
                                "name": "list_merge"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_merge": {
                                "input_1": [
                                    "artifact:*.cef.requestURL"
                                ],
                                "input_10": null,
                                "input_2": null,
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "15",
                    "type": "utility",
                    "warnings": {},
                    "x": 1300,
                    "y": 544.5
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 7,
                        "functionName": "code_7",
                        "id": "16",
                        "inputParameters": [
                            "list_merge_5:custom_function_result.data.item"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'after list_merge:  {json.dumps(list_merge_5_data_item, indent=4)}')\n\n",
                    "warnings": {},
                    "x": 1300,
                    "y": 640
                },
                "17": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 8,
                        "functionName": "code_8",
                        "id": "17",
                        "inputParameters": [
                            "drop",
                            "list_merge_5:custom_function_result.data.item",
                            "format_1:formatted_data"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "17",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    import re\n    \n    #input_parameter_1 = \"[^\\s]*fmglobal.com[^\\s]*\"\n    \n    input_list = list_merge_5_data_item\n    action = input_parameter_0\n    regex = format_1\n\n    # this only works on lists, so print a warning and return None if the input is not a list\n    if not isinstance(input_list, list):\n        raise ValueError('input_list is not a list')\n\n    action = action.lower()\n    if action not in ('keep', 'drop'):\n        raise ValueError(\"action is not 'keep' or 'drop'\")\n\n    # iterate through the items in the list and append each non-falsy one as its own dictionary\n    outputs = []\n    for item in input_list:\n        if item:\n            phantom.debug(f're.match {str(regex)}, {str(item)}')\n            if re.match(str(regex), str(item)):\n                phantom.debug('match')\n                if action == 'keep':\n                    outputs.append({\"item\": item})\n            else:\n                phantom.debug('no match')\n                if action == 'drop':\n                    outputs.append({\"item\": item})\n                    \n    phantom.debug(f'outputs:  {json.dumps(outputs, indent=4)}')\n\n",
                    "warnings": {},
                    "x": 1580,
                    "y": 840
                },
                "18": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_1",
                        "id": "18",
                        "parameters": [],
                        "template": "[^\\s]*fmglobal.com/.*|[^\\s]*fmglobal.com$",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "18",
                    "type": "format",
                    "warnings": {},
                    "x": 1580,
                    "y": 740
                },
                "19": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "incident_iocs_present",
                            "repoName": "phantom_pb_templates"
                        },
                        "functionId": 6,
                        "functionName": "incident_iocs_present_6",
                        "id": "19",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "incident_iocs_present": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "incident_iocs_present",
                                "name": "incident_iocs_present"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "incident_iocs_present": {
                                "input_1": null,
                                "input_2": null,
                                "input_3": null,
                                "input_4": null,
                                "input_5": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "19",
                    "type": "utility",
                    "warnings": {},
                    "x": 600,
                    "y": 540
                },
                "20": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "code_3",
                        "id": "20",
                        "inputParameters": [
                            "incident_iocs_present_6:custom_function_result.data.present"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'present:  {json.dumps(incident_iocs_present_6_data_present, indent=4)}')\n\n",
                    "warnings": {},
                    "x": 600,
                    "y": 640
                },
                "21": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "incident_iocs_present_6:custom_function_result.data.present",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "21",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "21",
                    "type": "decision",
                    "warnings": {},
                    "x": 680,
                    "y": 760
                },
                "22": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 9,
                        "functionName": "code_9",
                        "id": "22",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug('iocs_present is TRUE')\n\n",
                    "warnings": {},
                    "x": 380,
                    "y": 920
                },
                "23": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 10,
                        "functionName": "code_10",
                        "id": "23",
                        "inputParameters": [],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug('iocs present is FALSE')\n\n",
                    "warnings": {},
                    "x": 720,
                    "y": 920
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "code_2",
                        "id": "5",
                        "inputParameters": [
                            "regex_filter_list_1:custom_function_result.data.item"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    phantom.debug(f'after filter:  {json.dumps(regex_filter_list_1_data_item, indent=4)}')\n\n",
                    "warnings": {},
                    "x": 980,
                    "y": 960
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_merge",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "list_merge_3",
                        "id": "6",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_merge": {
                                "description": "Merge 2-10 different data paths into a single output data path. For example, if IP addresses are stored in the fields sourceAddress, destinationAddress, and deviceAddress, then those three fields could be merged together to form a single list of IP addresses.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_merge",
                                "name": "list_merge"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_merge": {
                                "input_1": [
                                    "artifact:*.cef.destinationDnsDomain"
                                ],
                                "input_10": null,
                                "input_2": null,
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "6",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 544.5
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "code_4",
                        "id": "8",
                        "inputParameters": [
                            "list_merge_3:custom_function_result.data.item"
                        ],
                        "outputVariables": [],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    input_list = list_merge_3_data_item\n    \n    outputs = []\n    \n    for item in input_list:\n        split_list = item.split(\".\")\n        if len(split_list) >= 2:\n            outputs.append({\"item\": \".\".join(split_list[-2:])})\n            \n    phantom.debug(f'outputs:  {json.dumps(outputs, indent=4)}')\n        \n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 600,
                    "y": 1080
                },
                "9": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_fixup_domain_names",
                            "repoName": "phantom_pb_templates"
                        },
                        "functionId": 4,
                        "functionName": "list_fixup_domain_names_4",
                        "id": "9",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_fixup_domain_names": {
                                "description": "",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "domain_list",
                                        "name": "domain_list",
                                        "placeholder": "list of domain names",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_fixup_domain_names",
                                "name": "list_fixup_domain_names"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_fixup_domain_names": {
                                "domain_list": [
                                    "list_merge_3:custom_function_result.data.item"
                                ]
                            }
                        }
                    },
                    "errors": {},
                    "id": "9",
                    "type": "utility",
                    "warnings": {},
                    "x": 980,
                    "y": 740
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.11",
        "version": "6.2.0.355"
    },
    "create_time": "2024-01-19T23:01:14.455071+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}